/home/volkan/anaconda3/envs/adlr/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: [33mWARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
dict: {'num_obstacles': 5, 'object_size': 20, 'window_size': 512, 'action_step_scaling': 20, 'obstacle_step_scaling': 5, 'delta_T': 1, 'render_fps': 24, 'input_dims': 26, 'batch_size': 4096, 'gamma': 0.999, 'target_update': 10, 'alpha': 0.0003, 'beta': 0.0003, 'tau': 0.005, 'entropy_factor': 0.5, 'entropy_factor_final': 0.5, 'num_episodes': 100, 'sigma_init': 2.0, 'sigma_final': 2.0, 'pretrain': True, 'num_episodes_pretrain': 100, 'maxsize_ReplayMemory': 100000, 'action_smoothing': False, 'action_history_size': 3, 'select_action_filter': True, 'select_action_filter_after_episode': 70, 'sort_obstacles': True, 'apply_environment_seed': True, 'seed_init_value': 3407, 'plot_durations': True, 'plot_sigma': True, 'scheduler_period': 2}
Testing random seed: tensor([0.6346, 0.6923])
Pretrain episode: 0
Pretrain episode: 1
Pretrain episode: 2
Pretrain episode: 3
Pretrain episode: 4
Pretrain episode: 5
Pretrain episode: 6
Pretrain episode: 7
Pretrain episode: 8
Pretrain episode: 9
Pretrain episode: 10
Pretrain episode: 11
Pretrain episode: 12
Pretrain episode: 13
Pretrain episode: 14
Pretrain episode: 15
Pretrain episode: 16
Pretrain episode: 17
Pretrain episode: 18
Pretrain episode: 19
Pretrain episode: 20
Pretrain episode: 21
Pretrain episode: 22
Pretrain episode: 23
Pretrain episode: 24
Pretrain episode: 25
Pretrain episode: 26
Pretrain episode: 27
Pretrain episode: 28
Pretrain episode: 29
Pretrain episode: 30
Pretrain episode: 31
Pretrain episode: 32
Pretrain episode: 33
Pretrain episode: 34
Pretrain episode: 35
Pretrain episode: 36
Pretrain episode: 37
Pretrain episode: 38
Pretrain episode: 39
Pretrain episode: 40
Pretrain episode: 41
Pretrain episode: 42
Pretrain episode: 43
Pretrain episode: 44
Pretrain episode: 45
Pretrain episode: 46
Pretrain episode: 47
Pretrain episode: 48
Pretrain episode: 49
Pretrain episode: 50
Pretrain episode: 51
Pretrain episode: 52
Pretrain episode: 53
Pretrain episode: 54
Pretrain episode: 55
Pretrain episode: 56
Pretrain episode: 57
Pretrain episode: 58
Pretrain episode: 59
Pretrain episode: 60
Pretrain episode: 61
Pretrain episode: 62
Pretrain episode: 63
Pretrain episode: 64
Pretrain episode: 65
Pretrain episode: 66
Pretrain episode: 67
Pretrain episode: 68
Pretrain episode: 69
Pretrain episode: 70
Pretrain episode: 71
Pretrain episode: 72
Pretrain episode: 73
Pretrain episode: 74
Pretrain episode: 75
Pretrain episode: 76
Pretrain episode: 77
Pretrain episode: 78
Pretrain episode: 79
Pretrain episode: 80
Pretrain episode: 81
Pretrain episode: 82
Pretrain episode: 83
Pretrain episode: 84
Pretrain episode: 85
Pretrain episode: 86
Pretrain episode: 87
Pretrain episode: 88
Pretrain episode: 89
Pretrain episode: 90
Pretrain episode: 91
Pretrain episode: 92
Pretrain episode: 93
Pretrain episode: 94
Pretrain episode: 95
Pretrain episode: 96
Pretrain episode: 97
Pretrain episode: 98
Pretrain episode: 99
Pretrain complete
Normal training episode: 0
Traceback (most recent call last):
  File "/home/volkan/31_Projects/adlr/tum-adlr-09/SAC-X/training.py", line 568, in <module>
    action = action_selection(state, actorNet, task)
  File "/home/volkan/31_Projects/adlr/tum-adlr-09/SAC-X/training.py", line 202, in action_selection
    action = select_action_filter(state, actorNet, task_)
  File "/home/volkan/31_Projects/adlr/tum-adlr-09/SAC-X/training.py", line 193, in select_action_filter
    actions, _ = actorNet.sample_normal(state, task_, reparametrize=False)
  File "/home/volkan/31_Projects/adlr/tum-adlr-09/SAC-X/model.py", line 148, in sample_normal
    probabilities = Normal(mu, sigma)
  File "/home/volkan/anaconda3/envs/adlr/lib/python3.9/site-packages/torch/distributions/normal.py", line 54, in __init__
    super(Normal, self).__init__(batch_shape, validate_args=validate_args)
  File "/home/volkan/anaconda3/envs/adlr/lib/python3.9/site-packages/torch/distributions/distribution.py", line 54, in __init__
    if not valid.all():
